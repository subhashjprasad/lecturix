import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

# Sample data
x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 3, 4, 5, 6])

# Linear regression parameters
slope, intercept = np.polyfit(x, y, 1)

# Create figure and axes
fig, ax = plt.subplots()
line, = ax.plot([], [], 'r-', linewidth=2)
scatter, = ax.plot([], [], 'bo')

# Set axis limits with some padding
x_min, x_max = x.min() - 1, x.max() + 1
y_min, y_max = y.min() - 1, y.max() + 1
ax.set_xlim(x_min, x_max)
ax.set_ylim(y_min, y_max)

# Animation functions
def init():
    line.set_data([], [])
    scatter.set_data([], [])
    return line, scatter,

def update(frame):
    x_data = x[:frame+1]
    y_data = y[:frame+1]
    line.set_data(x, slope*x + intercept)
    scatter.set_data(x_data, y_data)
    return line, scatter,

# Create animation
ani = FuncAnimation(fig, update, frames=len(x), init_func=init, blit=True)

plt.show()